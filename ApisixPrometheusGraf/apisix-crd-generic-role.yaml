apiVersion: apisix.apache.org/v2
kind: ApisixConsumer
metadata:
  name: extapp
spec:
  authParameter:
    jwtAuth:
      value:
        key: extapp
        algorithm: RS256
        public_key: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu1SU1LfVLPHCozMxH2Mo
          4lgOEePzNm0tRgeLezV6ffAt0gunVTLw7onLRnrq0/IzW7yWR7QkrmBL7jTKEn5u
          +qKhbwKfBstIs+bMY2Zkp18gnTxKLxoS2tFczGkPLPgizskuemMghRniWaoLcyeh
          kd3qqGElvW/VDL5AaWTg0nLVkjRo9z+40RQzuVaE8AkAFmxZzow3x+VJYKdjykkJ
          0iT9wCS0DRTXu269V264Vf/3jvredZiKRkgwlL9xNAwxXFg0x/XFw005UWVRIkdg
          cKWTjpBP2dPwVZ4WWC+9aGVd+Gyn1o0CLelf4rEjGoXbAAEgAqeGUxrcIlbjXfbc
          mwIDAQAB
          -----END PUBLIC KEY-----
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpbin
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
      - name: httpbin
        image: kennethreitz/httpbin
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  labels:
    app: httpbin
spec:
  type: ClusterIP
  selector:
    app: httpbin
  ports:
  - port: 8080
    targetPort: 80
---
apiVersion: apisix.apache.org/v2
kind: ApisixUpstream
metadata:
  name: httpbin
spec:
  loadbalancer:
    type: roundrobin  # Others: ewma (least latency), chash (hash on value), least_conn
  retries: 1
  timeout:
    connect: 2s
    send: 2s
    read: 2s
---
apiVersion: apisix.apache.org/v2
kind: ApisixUpstream
metadata:
  name: mecc-simple-rest
spec:
  loadbalancer:
    type: least_conn  # Others: ewma (least latency), chash (hash on value), roundrobin
  retries: 1
  timeout:
    connect: 2s
    send: 2s
    read: 2s
---
apiVersion: apisix.apache.org/v2
kind: ApisixPluginConfig
metadata:
  name: jwt-authentication-standard
spec:
  plugins:
  - name: jwt-auth
    enable: true
---
apiVersion: apisix.apache.org/v2
kind: ApisixPluginConfig
metadata:
  name: jwt-authorization-standard
spec:
  plugins:
  - name: jwt-auth
    enable: true
  - name: in-jwt-list-claim
    enable: true
    config:
      claim_name: roles
      method_reqs:
      - method: GET
        one_of_these: [ "EDITOR", "VIEWER" ]
      - method: PUT
        one_of_these: [ "EDITOR" ]
      - method: DELETE
        one_of_these: [ "EDITOR" ]
      - method: POST
        one_of_these: [ "EDITOR" ]
---         
apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: simple-service-routes
spec:
  http:
  - name: everybody
    match:
      paths:
        - /sayhello
    backends:
    - serviceName: mecc-simple-rest
      servicePort: 9003
  - name: only-auth
    match:
      paths:
      - /getrate/*
    plugin_config_name: jwt-authentication-standard
    backends:
    - serviceName: mecc-simple-rest
      servicePort: 9003
  - name: only-admin
    match:
      paths:
      - /showsecure
    plugin_config_name: jwt-authorization-standard
    backends:
    - serviceName: mecc-simple-rest
      servicePort: 9003
  - name: httpbin
    match:
      paths:
        - /httpbin/*
    plugin_config_name: jwt-authorization-standard
    plugins:
    # Go to https://mockbin.org/bin/99c2dcca-b874-4f73-aa96-ce9a6a6e7d9d/log to see the logs
    - name: http-logger
      enable: true
      config:
        uri: https://mockbin.org/bin/99c2dcca-b874-4f73-aa96-ce9a6a6e7d9d
        log_format: {
          "timestamp": "$time_iso8601",
          "auth": "$http_authorization",
          "reqURI": "$request_uri",
          "reqMethod": "$request_method",
          "reqBody": "$request_body",
          "respCode": "$status",
          "upstreamConnTime": "$upstream_connect_time",
          "upstreamQueueTime": "$upstream_queue_time",
          "upstreamRespTime": "$upstream_response_time",
          "upstreamStatus": "$upstream_status"
        }
    - name: udp-logger
      enable: true
      config:
        host: default-microservice
        port: 9090
        timeout: 2  # in secs
        log_format: {
          "timestamp": "$time_iso8601",
          "auth": "$http_authorization",
          "reqURI": "$request_uri",
          "reqMethod": "$request_method",
          "reqBody": "$request_body",
          "respCode": "$status",
          "upstreamConnTime": "$upstream_connect_time",
          "upstreamQueueTime": "$upstream_queue_time",
          "upstreamRespTime": "$upstream_response_time",
          "upstreamStatus": "$upstream_status"
        }
    - name: proxy-rewrite
      enable: true
      config:
        regex_uri: ["^/httpbin/(.*)", "/$1"]
    backends:
    - serviceName: httpbin
      servicePort: 8080