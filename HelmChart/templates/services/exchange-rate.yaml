{{- $service := .Values.exchangeRate }}
{{- $image := printf "%s/%s:%s" .Values.general.imagePrefix $service.image .Values.general.imageTag }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ $service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-{{ $service.name }}
spec:
  replicas: {{ $service.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ $service.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ $service.name }}
    spec:
      {{- with $service.nodeSel }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.general.maxGracefulTimeInSecs }}
      containers:
        - lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep {{ .Values.general.preStopTimeInSec }}" ]  # Prevent requests from being received while the container is terminated and the Pod status is propageted:  https://hackmd.io/@ryanjbaxter/spring-on-k8s-workshop#Graceful-Shutdown https://linkerd.io/2.12/tasks/graceful-shutdown/#graceful-shutdown-in-kubernetes
          startupProbe:
            grpc:   # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-grpc-liveness-probe  https://github.com/yidongnan/grpc-spring-boot-starter/issues/123
              port: {{ $service.containerPort }}
            initialDelaySeconds: {{ .Values.general.minimumStartupDelayInSecs }}
            periodSeconds: {{ .Values.general.startupProbePeriod }}
            failureThreshold: {{ .Values.general.startupFailureThreshold }}
          livenessProbe:
            grpc:
              port: {{ $service.containerPort }}
            periodSeconds: {{ .Values.general.livenessProbePeriod }}
            failureThreshold: {{ .Values.general.livenessFailureThreshold }}
          readinessProbe:
            grpc:
              port: {{ $service.containerPort }}
            periodSeconds: {{ .Values.general.readinessProbePeriod }}
            failureThreshold: {{ .Values.general.readinessFailureThreshold }}
          resources:
            requests:
              memory: {{ $service.requests.mem }}
              cpu: {{ $service.requests.cpu }}
          name: {{ $service.name }}
          image: {{ $image }}
          imagePullPolicy: {{ .Values.general.imagePullPolicy }}
          ports:
            - containerPort: {{ $service.containerPort }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ $service.activeProfiles }}
            - name: APP_CONFIG_MAP  # This can be used to override app properties from a ConfigMap https://docs.spring.io/spring-cloud-kubernetes/docs/2.1.5/reference/html/#configmap-propertysource
              value: "{{ .Release.Name }}-{{ $service.name }}"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ $service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-{{ $service.name }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}-{{ $service.name }}
  ports:
    - protocol: TCP
      port: {{ $service.clusterPort }}
      targetPort: {{ $service.containerPort }}
---
{{- if $service.externalAccess.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ $service.name }}-ext-access
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-{{ $service.name }}
spec:
  type: NodePort
  selector:
    app: {{ .Release.Name }}-{{ $service.name }}
  ports:
      - protocol: TCP
        nodePort: {{ $service.externalAccess.port }}
        port: {{ $service.clusterPort }}
        targetPort: {{ $service.containerPort }}
---
{{- end }}