{{- $service := .Values.configServer }}
{{- $image := printf "%s:%s" $service.image .Values.general.imageTag }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-{{ $service.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-{{ $service.name }}
spec:
  replicas: {{ $service.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ $service.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ $service.name }}
    spec:
      {{- with $service.nodeSel }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
        - name: configs
          hostPath:
            path: /scl/config-server/src/main/resources/configs
            type: DirectoryOrCreate
      containers:
        - livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ $service.containerPort }}
            initialDelaySeconds: {{ $service.startupTimeInSecs }}
            periodSeconds: {{ .Values.general.livenessProbePeriod }}
            failureThreshold: {{ .Values.general.livenessFailureThreshold }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ $service.containerPort }}
            initialDelaySeconds: {{ $service.startupTimeInSecs }}
            periodSeconds: {{ .Values.general.readinessProbePeriod }}
            failureThreshold: {{ .Values.general.readinessFailureThreshold }}
          name: {{ $service.name }}
          image: {{ $image }}
          imagePullPolicy: {{ .Values.general.imagePullPolicy }}
          ports:
            - containerPort: {{ $service.containerPort }}
          volumeMounts:
            - name: configs
              mountPath: /opt/mecc/configs
          env:
            - name: ENCRYPT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ $service.name }}
                  key: encryptKey
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ $service.name }}
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}-{{ $service.name }}
  ports:
    - protocol: TCP
      port: {{ $service.clusterPort }}
      targetPort: {{ $service.containerPort }}
---
{{- if $service.externalAccess.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ $service.name }}-ext-access
  namespace: {{ .Release.Namespace }}
spec:
  type: NodePort
  selector:
    app: {{ .Release.Name }}-{{ $service.name }}
  ports:
      - protocol: TCP
        nodePort: {{ $service.externalAccess.port }}
        port: {{ $service.clusterPort }}
        targetPort: {{ $service.containerPort }}
---
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-{{ $service.name }}
  namespace: {{ .Release.Namespace }}
data:
  encryptKey: "bWVjY2tleQo="